name: Weekly Screenshot Bot (Pages + Slack)

on:
  schedule:
    - cron: '0 12 * * 1'   # Every Monday 12:00 UTC = 8:00 AM America/Toronto
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          echo "playwright" > requirements.txt
          pip install -r requirements.txt
          playwright install --with-deps chromium

      - name: Run screenshot script (outputs to site/)
        run: python screenshot_pinned_tweet.py

      - name: Inspect site/ output (debug)
        run: |
          echo "Listing ./site"
          ls -lah site || true

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

  deploy:
    needs: build
    environment:
      name: github-pages
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4

  notify-slack:
    needs: deploy
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    steps:
      - name: Post images to Slack via webhook (inline)
        run: |
          set -euo pipefail

          OWNER="${GITHUB_REPOSITORY%%/*}"
          REPO="${GITHUB_REPOSITORY##*/}"
          BASE_URL="https://${OWNER}.github.io/${REPO}"

          EARN_URL="${BASE_URL}/pinned_tweet.png"
          ECON_URL="${BASE_URL}/econ_us_ca_high.png"

          cat > payload.json <<'JSON'
          {
            "text": "Earnings and Economic Calendar for the week - For internal use only",
            "attachments": [
              { "title": "Earnings Calendar", "image_url": "__EARN_URL__" },
              { "title": "Economic Calendar (US + Canada, High, This Week)", "image_url": "__ECON_URL__" }
            ]
          }
          JSON

          sed -i "s|__EARN_URL__|${EARN_URL}|g" payload.json
          sed -i "s|__ECON_URL__|${ECON_URL}|g" payload.json

          curl -sS -X POST -H 'Content-type: application/json' \
            --data @payload.json \
            "${SLACK_WEBHOOK}"
